@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "Gui.LearnLanguage",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_168358276 { 
   	label=DictionaryApi
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   DictJson168358276[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DictJson</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ ParseText(inputStream: InputStream): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DictionaryApi168358276[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DictionaryApi</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ Connection(): InputStream</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1967532549 { 
   	label=ApiKey
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   ApiKeyBuilder1967532549[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApiKeyBuilder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ Connection(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ GetApiKey(apiKey: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ SetApiKey(apiKey: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_309402756 { 
   	label=SqlLite
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   SQlite309402756[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SQlite</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   conn: Connection [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- createTable()</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteKeyMenu(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertKey(apiKey: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ readKey(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_692885818 { 
   	label=DeepLApi
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   DeepLApiBuilder692885818[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DeepLApiBuilder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ Connection(): InputStream</TD></TR>
<TR><TD ALIGN="LEFT" >+ SetApiKey(apiKey: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Translator692885818[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Translator</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ ParseText(inputStream: Object): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_71963 { 
   	label=Gui
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   LearnLanguage71963[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LearnLanguage</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   textArea: JTextArea [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   translatedText: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- LanguageMenu()</TD></TR>
<TR><TD ALIGN="LEFT" >- LookUpSelectedWord()</TD></TR>
<TR><TD ALIGN="LEFT" >- LookUp_Button()</TD></TR>
<TR><TD ALIGN="LEFT" >- Main_Text_Area()</TD></TR>
<TR><TD ALIGN="LEFT" >- SetApiKey()</TD></TR>
<TR><TD ALIGN="LEFT" >- Translate_Button()</TD></TR>
<TR><TD ALIGN="LEFT" >- createMenuItem(label: String, languageCode: String): JMenuItem</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >- translateSelectedWord()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
ApiKeyBuilder1967532549 -> DeepLApiBuilder692885818[arrowhead=none, arrowtail=empty, dir=both];
ApiKeyBuilder1967532549 -> DictionaryApi168358276[arrowhead=none, arrowtail=empty, dir=both];
DeepLApiBuilder692885818 -> Translator692885818[arrowhead=none, arrowtail=empty, dir=both];
DictionaryApi168358276 -> DictJson168358276[arrowhead=none, arrowtail=empty, dir=both];
LearnLanguage71963 -> DeepLApiBuilder692885818[label="translateSelectedWord() -> Connection()"];
LearnLanguage71963 -> DictJson168358276[label="LookUpSelectedWord() -> ParseText()"];
LearnLanguage71963 -> DictionaryApi168358276[label="LookUpSelectedWord() -> Connection()"];
LearnLanguage71963 -> Translator692885818[label="translateSelectedWord() -> ParseText()"];
    
}
@enduml